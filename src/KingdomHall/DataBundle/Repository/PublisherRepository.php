<?php

namespace KingdomHall\DataBundle\Repository;

use Doctrine\ORM\EntityRepository;
use Doctrine\ORM\Tools\Pagination\Paginator;

/**
 * PublisherRepository
 *
 * This class was generated by the PhpStorm "Php Annotations" Plugin. Add your own custom
 * repository methods below.
 */
class PublisherRepository extends EntityRepository
{
    public function searchPublisher($congregation, $pagination, $sort, $search = '', $withDeleted = false)
    {
        $builder = $this->getEntityManager()->createQueryBuilder()
            ->select('p')
            ->from('KingdomHallDataBundle:Publisher', 'p')
            ->where('p.congregation = :congregation')
            ->setParameter('congregation', $congregation);

        if (!$withDeleted) {
            $builder->andWhere('p.deleted = false');
        }

        // Set order
        $builder
            ->orderBy('p.'.$sort['sort'], $sort['order']);

        // Set pagination
        $builder->setMaxResults($pagination['limit'])
            ->setFirstResult($pagination['offset']);

        // Set search
        if ($search) {
            $where = $builder->expr()->orX();
            $where->add($builder->expr()->like('p.firstName', $builder->expr()->literal('%' . $search . '%')));
            $where->add($builder->expr()->like('p.email', $builder->expr()->literal('%' . $search . '%')));
            $where->add($builder->expr()->like('p.lastName', $builder->expr()->literal('%' . $search . '%')));

            $builder->andWhere($where);
        }
        $query = $builder->getQuery();

        $paginator = new Paginator($query);

        $territories = $query->getResult();
        $response  = array (
            'total' => count($paginator),
            'rows' => $territories,
        );

        return $response;
    }
}
